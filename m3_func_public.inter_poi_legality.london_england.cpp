#include <random>
#include <unittest++/UnitTest++.h>

#include "StreetsDatabaseAPI.h"
#include "m1.h"
#include "m3.h"

#include "unit_test_util.h"
#include "path_verify.h"

using ece297test::relative_error;
using ece297test::path_is_legal;


SUITE(inter_poi_path_func_public) {
struct MapFixture {
    MapFixture() {
        rng = std::minstd_rand(4);
        rand_intersection = std::uniform_int_distribution<unsigned>(0, getNumberOfIntersections()-1);
        rand_street = std::uniform_int_distribution<unsigned>(1, getNumberOfStreets()-1);
        rand_segment = std::uniform_int_distribution<unsigned>(0, getNumberOfStreetSegments()-1);
        rand_poi = std::uniform_int_distribution<unsigned>(0, getNumberOfPointsOfInterest()-1);
        rand_lat = std::uniform_real_distribution<double>(50.941036224, 51.983997345);
        rand_lon = std::uniform_real_distribution<double>(-1.114988804, 0.894998193);
        rand_turn_penalty = std::uniform_real_distribution<double>(0., 30.);
    }

    std::minstd_rand rng;
    std::uniform_int_distribution<unsigned> rand_intersection;
    std::uniform_int_distribution<unsigned> rand_street;
    std::uniform_int_distribution<unsigned> rand_segment;
    std::uniform_int_distribution<unsigned> rand_poi;
    std::uniform_real_distribution<double> rand_lat;
    std::uniform_real_distribution<double> rand_lon;
    std::uniform_real_distribution<double> rand_turn_penalty;
};
    TEST(find_path_to_point_of_interest_functionality) {
        std::vector<unsigned> path;
        std::vector<unsigned> valid_end_intersections;
        double path_cost;
        
        valid_end_intersections = {291513};
        path = find_path_to_point_of_interest(29808, "NuAsiya", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(29808, valid_end_intersections, path));
        CHECK(path_cost <= 3653.38462168644809935);
        
        valid_end_intersections = {33460, 303137, 308779, 349383, 79425, 45069, 91490};
        path = find_path_to_point_of_interest(85348, "Charcoal Grill", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(85348, valid_end_intersections, path));
        CHECK(path_cost <= 1049.18535367257800317);
        
        valid_end_intersections = {363905, 106690, 158873};
        path = find_path_to_point_of_interest(85911, "Church Street", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(85911, valid_end_intersections, path));
        CHECK(path_cost <= 2331.43995060633824323);
        
        valid_end_intersections = {115517, 146839, 241483, 84147, 23519, 63067, 250423, 228509, 211747, 34448, 64440, 430205, 46635, 252376, 409554, 43166, 201630, 3632, 353294, 52780, 436315, 105469, 1812, 79890, 173453, 91141, 59313, 283582, 33440, 33736, 417812, 58785, 354978, 328434, 56018, 393321, 289346, 391586, 7068, 296154, 107058, 335594, 78371, 79621, 208748, 202994, 394468, 142001, 426844, 337535, 1310, 156683, 116039, 357229, 62699, 270065, 272219, 158213, 122125, 245544, 313712, 401925};
        path = find_path_to_point_of_interest(87253, "Nando's", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(87253, valid_end_intersections, path));
        CHECK(path_cost <= 334.65060402275287288);
        
        valid_end_intersections = {62922};
        path = find_path_to_point_of_interest(88776, "British Volunteer", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(88776, valid_end_intersections, path));
        CHECK(path_cost <= 4124.06716679829878558);
        
        valid_end_intersections = {328359};
        path = find_path_to_point_of_interest(91528, "Asda Petrol Station", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(91528, valid_end_intersections, path));
        CHECK(path_cost <= 2888.22328782530985336);
        
        valid_end_intersections = {92411, 182830, 321240, 44005, 302938, 301694, 56039, 217336, 300680, 1141, 254958, 242903, 157376, 11730, 157382, 178161, 407942, 296275, 273389, 129514, 223422, 22581, 22167, 415744, 386447, 23448, 279886, 154684, 357446, 11257, 89975, 296137, 279361, 26928, 120314, 76471, 33605, 34729, 274771, 235299, 202486, 425721, 293536, 340258, 393320, 3474, 265387, 188664, 409341, 298781, 419062, 431031, 305770, 124320, 29951, 239270, 313491, 356154, 314527, 35367, 158026, 35233, 301809, 8132, 30747, 102687, 146820, 381757, 89405, 230677, 329944, 60445, 91165, 33486, 22473, 117546, 358470, 120999, 350523, 35375, 340865, 39449, 395044, 314343, 34024, 393794, 393321, 418122, 354373, 328598, 41143, 84676, 34977, 48324, 386926, 126242, 117079, 430236, 24571, 412917, 18270, 347780, 417460, 61965, 23072, 411462, 404814, 35274, 29184, 158455, 296432, 78371, 198769, 183309, 394468, 20027, 195484, 142896, 9855, 224517, 9857, 139583, 8134, 435232, 291155, 412064, 214566, 82969, 292373, 146425, 95101, 33228, 33430, 34827, 357936, 201410, 20350, 31080, 349602, 55955, 327823, 89466, 278803};
        path = find_path_to_point_of_interest(120844, "Starbucks", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(120844, valid_end_intersections, path));
        CHECK(path_cost <= 301.42809801411596027);
        
        valid_end_intersections = {393325};
        path = find_path_to_point_of_interest(149052, "Sound Bites Grill", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(149052, valid_end_intersections, path));
        CHECK(path_cost <= 1209.70444589997032381);
        
        valid_end_intersections = {238880, 94422};
        path = find_path_to_point_of_interest(163646, "Brompton Dock", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(163646, valid_end_intersections, path));
        CHECK(path_cost <= 1892.25566230468598405);
        
        valid_end_intersections = {112639, 34105};
        path = find_path_to_point_of_interest(254529, "Corney and Barrow", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(254529, valid_end_intersections, path));
        CHECK(path_cost <= 3867.26212232153329751);
        
        valid_end_intersections = {5310};
        path = find_path_to_point_of_interest(277426, "Bush Hill Park Library", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(277426, valid_end_intersections, path));
        CHECK(path_cost <= 4212.94948254788141639);
        
        valid_end_intersections = {125493, 291134, 264497, 33750, 33271, 3572, 290037, 366891, 33086, 370889, 278722, 45725, 33793, 10161, 34240, 227719, 384187, 109357, 158621, 25714, 33959, 34940, 33671, 60746, 316361, 340078, 123009, 34318, 2738, 309102, 83601, 30829, 257162, 125491, 285916, 381327, 381331, 20247, 198323, 95363, 20244, 290193, 383640, 381326, 381315, 310804, 383627, 383634, 383641, 383680, 383630, 322836, 173418, 196656, 69391, 69422, 191806, 69396, 69436, 192697, 191793, 154921, 121623, 121622, 121621, 272048, 122952, 88732, 119791, 88732, 79002, 272053, 154912, 79000, 371119, 79004, 78985, 78984, 196658, 88729, 300634, 338173, 154894, 154894, 36535, 372288, 378783, 383662, 383646, 383646, 372287, 317146, 383658, 120735, 36526, 299943, 36523, 264009, 264007, 383347, 23796, 383349, 20260, 53457, 309173, 270279, 104713, 241484, 300497, 106837, 6206, 107146, 125760, 293349, 31371, 325544, 67225, 385235, 36317, 38495, 106864, 125523, 122183, 122181, 309084, 309084, 281386, 335505, 76506, 76458, 60761, 72375, 254089, 120727, 280410, 72374, 192702, 72370, 72287, 274771, 279892, 72274, 184232, 227177, 231630, 184228, 192601, 10393, 352664, 280285, 231621, 279898, 76590, 291368, 76585, 192832, 62895, 120207, 62895, 289755, 52781, 120314, 52784, 62870, 231635, 192635, 88686, 88698, 88696, 88696, 259698, 69388, 69389, 405911, 152345, 152345, 69412, 69400, 152343, 69416, 69438, 191786, 121629, 191789, 69432, 313540, 88675, 88674, 37366, 124268, 124268, 311199, 37367, 323212, 88673, 401533, 88679, 137510, 123602, 121205, 119599, 123598, 124244, 152329, 150496, 191714, 191717, 191715, 90163, 122921, 309847, 123588, 122606, 122603, 19918, 123584, 33952, 33951, 119956, 110139, 125515, 98338, 104797, 104659, 104668, 347058, 105207, 106877, 105429, 24862, 141956, 286218, 34274, 33082, 106713, 64449, 64445, 35231, 35216, 18266, 18268, 35226, 33582, 33759, 364527, 364543, 33869, 17574, 64228, 35273, 33902, 33882, 33881, 33882, 314538, 264765, 109354, 109354, 278721, 36307, 33521, 33901, 33901, 33902, 33901, 32997, 32993, 33336, 33511, 158680, 382880, 16327, 20349, 16329, 16332, 123747, 123746, 327762, 92119, 30659, 30648, 18290, 34548, 293539, 290188, 290189, 5232, 296986, 140608, 296980, 218724, 6176, 121756, 163107, 320385, 3458, 111578, 226976, 148795, 247124, 247256, 273395, 163961, 415115, 124211, 183513, 44866, 39961, 34037, 252004, 34083, 368294, 370318, 370312, 25656, 370312, 274678, 314313, 34509, 321224, 33857, 2727, 40293, 383093, 38195, 260700, 274334, 34773, 34780, 34897, 34894, 34898, 34892, 34612, 19819, 34771, 3747, 34759, 34757, 34753, 34754, 33974, 33983, 397131, 33980, 353075, 34029, 34039, 34028, 34039, 48436, 25699, 246982, 264563, 25647, 34596, 239271, 296428, 34594, 33482, 33482, 214575, 296426, 294480, 214572, 335283, 34522, 34522, 34502, 294480, 34526, 34530, 34529, 45712, 16618, 33516, 16606, 33530, 33948, 12167, 52614, 52614, 16729, 16723, 381993, 272946, 43829, 382802, 348514, 5841, 4454, 4670, 5841, 348518, 123051, 110808, 67139, 121139, 153670, 9621, 5928, 120976, 9540, 9618, 9606, 296422, 5913, 9624, 10194, 10163, 296435, 10195, 33799, 34316, 34315, 34311, 33798, 33792, 34346, 200788, 12180, 12179, 34347, 331341, 109332, 5356, 4673, 4673, 185161, 9608, 9607, 33640, 33599, 33598, 34940, 5989, 4676, 224585, 120496, 53462, 53455, 124761, 127778, 35277, 247987, 247984, 124768, 410927, 226759, 374926, 82460, 125886, 52682, 55223, 124842, 52692, 55221, 55224, 55219, 34103, 33708, 226496, 75443, 33701, 226493, 33705, 272102, 281920, 226515, 427233, 33668, 366916, 33711, 33712, 427227, 33670, 283582, 225309, 369580, 283582, 159826, 370884, 370888, 318604, 370889, 370890, 250920, 369634, 324726, 250917, 369738, 159843, 159845, 369608, 369608, 3300, 2730, 273212, 158409, 370652, 370653, 415942, 34152, 245234, 34155, 369600, 369600, 34381, 318607, 370664, 360685, 360685, 2739, 360684, 2740, 382779, 382788, 382779, 161109, 158407, 312490, 60762, 120999, 124262, 124262, 121008, 34396, 33799};
        path = find_path_to_point_of_interest(278086, "Motorcycle parking", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(278086, valid_end_intersections, path));
        CHECK(path_cost <= 1996.38984592464908019);
        
        valid_end_intersections = {170463};
        path = find_path_to_point_of_interest(241546, "Clothes Bank Recycling", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(241546, valid_end_intersections, path));
        CHECK(path_cost <= 2780.23889944905158700);
        
        valid_end_intersections = {340549, 10013, 69587, 60012, 114465, 106691, 206676, 48931, 227343, 96405, 222295, 9863, 160487, 234310, 35047, 243500, 431800, 12413, 89971, 216944, 378421, 270298, 15496, 107768, 245391, 426103, 25216, 376415, 76743, 177619, 104623, 89971, 190846, 258426, 14091, 15496, 299426, 122221, 241546, 77748, 57281, 40945, 23522, 309718, 108624, 319371, 9341, 10575, 215583, 67485, 293431, 146247, 9863, 81729, 13133, 258668, 126993, 197094, 411701, 24653};
        path = find_path_to_point_of_interest(282069, "Lloyds TSB", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(282069, valid_end_intersections, path));
        CHECK(path_cost <= 1361.66354836129676187);
        
        valid_end_intersections = {102137, 173275, 44005, 104765, 394070, 77212, 415984, 119991, 158027, 34563, 34593, 25320, 257530, 26745, 96399, 426287, 207228, 53563, 74398, 47524, 184563, 283117, 79792, 64468, 139205, 13964, 260754, 299428, 122221, 241546, 302678, 31439, 1811, 295743, 182841, 398671, 19755, 68095, 340256, 314600, 351718, 111224, 328361, 291155, 196573, 295425, 73592, 88010, 275192, 275190, 24846, 13133, 189866, 103270, 96392, 190366, 413408, 133678, 198769, 25319, 100485, 202118, 242098, 31081, 253069, 56189, 366963, 314841, 403339, 213058, 12037, 237703, 374647, 296154, 340758, 265500, 293691, 237924, 209810, 34827, 121476, 192860, 124372, 119263, 14589, 13868, 23319, 7992, 356381, 55885, 276934};
        path = find_path_to_point_of_interest(313344, "Santander", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(313344, valid_end_intersections, path));
        CHECK(path_cost <= 1128.51166447031459938);
        
        valid_end_intersections = {109352};
        path = find_path_to_point_of_interest(323069, "Finch's", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(323069, valid_end_intersections, path));
        CHECK(path_cost <= 3345.49579957379046391);
        
        valid_end_intersections = {275539, 102117, 67861, 33848, 33218, 226156, 10166, 194531, 25455, 123237, 221580, 1812, 74400, 426687, 195293, 164, 118186, 295423, 331838, 82006, 212670, 296276, 11258, 204119, 208748, 426457, 20446, 231497, 294964, 409384, 8132, 33598, 78371};
        path = find_path_to_point_of_interest(335780, "Prezzo", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(335780, valid_end_intersections, path));
        CHECK(path_cost <= 1985.35629979611053386);
        
        valid_end_intersections = {74031};
        path = find_path_to_point_of_interest(183216, "Sundarban Tandoori", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(183216, valid_end_intersections, path));
        CHECK(path_cost <= 2434.05987453756370087);
        
        valid_end_intersections = {21167, 121192};
        path = find_path_to_point_of_interest(361506, "Pig & Whistle", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(361506, valid_end_intersections, path));
        CHECK(path_cost <= 2929.34039257331687622);
        
        valid_end_intersections = {331738};
        path = find_path_to_point_of_interest(363016, "Orlestone Church", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(363016, valid_end_intersections, path));
        CHECK(path_cost <= 6382.38373307801157353);
        
        valid_end_intersections = {183309};
        path = find_path_to_point_of_interest(374268, "Bupa Dental Care", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(374268, valid_end_intersections, path));
        CHECK(path_cost <= 3508.79509725287607580);
        
        valid_end_intersections = {125493, 291134, 264497, 33750, 33271, 3572, 290037, 366891, 33086, 370889, 278722, 45725, 33793, 10161, 34240, 227719, 384187, 109357, 158621, 25714, 33959, 34940, 33671, 60746, 316361, 340078, 123009, 34318, 2738, 309102, 83601, 30829, 257162, 125491, 285916, 381327, 381331, 20247, 198323, 95363, 20244, 290193, 383640, 381326, 381315, 310804, 383627, 383634, 383641, 383680, 383630, 322836, 173418, 196656, 69391, 69422, 191806, 69396, 69436, 192697, 191793, 154921, 121623, 121622, 121621, 272048, 122952, 88732, 119791, 88732, 79002, 272053, 154912, 79000, 371119, 79004, 78985, 78984, 196658, 88729, 300634, 338173, 154894, 154894, 36535, 372288, 378783, 383662, 383646, 383646, 372287, 317146, 383658, 120735, 36526, 299943, 36523, 264009, 264007, 383347, 23796, 383349, 20260, 53457, 309173, 270279, 104713, 241484, 300497, 106837, 6206, 107146, 125760, 293349, 31371, 325544, 67225, 385235, 36317, 38495, 106864, 125523, 122183, 122181, 309084, 309084, 281386, 335505, 76506, 76458, 60761, 72375, 254089, 120727, 280410, 72374, 192702, 72370, 72287, 274771, 279892, 72274, 184232, 227177, 231630, 184228, 192601, 10393, 352664, 280285, 231621, 279898, 76590, 291368, 76585, 192832, 62895, 120207, 62895, 289755, 52781, 120314, 52784, 62870, 231635, 192635, 88686, 88698, 88696, 88696, 259698, 69388, 69389, 405911, 152345, 152345, 69412, 69400, 152343, 69416, 69438, 191786, 121629, 191789, 69432, 313540, 88675, 88674, 37366, 124268, 124268, 311199, 37367, 323212, 88673, 401533, 88679, 137510, 123602, 121205, 119599, 123598, 124244, 152329, 150496, 191714, 191717, 191715, 90163, 122921, 309847, 123588, 122606, 122603, 19918, 123584, 33952, 33951, 119956, 110139, 125515, 98338, 104797, 104659, 104668, 347058, 105207, 106877, 105429, 24862, 141956, 286218, 34274, 33082, 106713, 64449, 64445, 35231, 35216, 18266, 18268, 35226, 33582, 33759, 364527, 364543, 33869, 17574, 64228, 35273, 33902, 33882, 33881, 33882, 314538, 264765, 109354, 109354, 278721, 36307, 33521, 33901, 33901, 33902, 33901, 32997, 32993, 33336, 33511, 158680, 382880, 16327, 20349, 16329, 16332, 123747, 123746, 327762, 92119, 30659, 30648, 18290, 34548, 293539, 290188, 290189, 5232, 296986, 140608, 296980, 218724, 6176, 121756, 163107, 320385, 3458, 111578, 226976, 148795, 247124, 247256, 273395, 163961, 415115, 124211, 183513, 44866, 39961, 34037, 252004, 34083, 368294, 370318, 370312, 25656, 370312, 274678, 314313, 34509, 321224, 33857, 2727, 40293, 383093, 38195, 260700, 274334, 34773, 34780, 34897, 34894, 34898, 34892, 34612, 19819, 34771, 3747, 34759, 34757, 34753, 34754, 33974, 33983, 397131, 33980, 353075, 34029, 34039, 34028, 34039, 48436, 25699, 246982, 264563, 25647, 34596, 239271, 296428, 34594, 33482, 33482, 214575, 296426, 294480, 214572, 335283, 34522, 34522, 34502, 294480, 34526, 34530, 34529, 45712, 16618, 33516, 16606, 33530, 33948, 12167, 52614, 52614, 16729, 16723, 381993, 272946, 43829, 382802, 348514, 5841, 4454, 4670, 5841, 348518, 123051, 110808, 67139, 121139, 153670, 9621, 5928, 120976, 9540, 9618, 9606, 296422, 5913, 9624, 10194, 10163, 296435, 10195, 33799, 34316, 34315, 34311, 33798, 33792, 34346, 200788, 12180, 12179, 34347, 331341, 109332, 5356, 4673, 4673, 185161, 9608, 9607, 33640, 33599, 33598, 34940, 5989, 4676, 224585, 120496, 53462, 53455, 124761, 127778, 35277, 247987, 247984, 124768, 410927, 226759, 374926, 82460, 125886, 52682, 55223, 124842, 52692, 55221, 55224, 55219, 34103, 33708, 226496, 75443, 33701, 226493, 33705, 272102, 281920, 226515, 427233, 33668, 366916, 33711, 33712, 427227, 33670, 283582, 225309, 369580, 283582, 159826, 370884, 370888, 318604, 370889, 370890, 250920, 369634, 324726, 250917, 369738, 159843, 159845, 369608, 369608, 3300, 2730, 273212, 158409, 370652, 370653, 415942, 34152, 245234, 34155, 369600, 369600, 34381, 318607, 370664, 360685, 360685, 2739, 360684, 2740, 382779, 382788, 382779, 161109, 158407, 312490, 60762, 120999, 124262, 124262, 121008, 34396, 33799};
        path = find_path_to_point_of_interest(15019, "Motorcycle parking", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(15019, valid_end_intersections, path));
        CHECK(path_cost <= 4739.90154334740236663);
        
        valid_end_intersections = {170430, 170463};
        path = find_path_to_point_of_interest(354296, "Co-op Pharmacy", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(354296, valid_end_intersections, path));
        CHECK(path_cost <= 4455.97895358424011647);
        
        valid_end_intersections = {76200, 34266, 5935, 267825, 275542, 69639, 181779, 48436, 122221, 60224, 102120, 19823, 1315, 22526, 52416, 32580, 158747, 228090, 4525, 220204, 21313, 34329, 57504, 22165, 103262, 412296, 83674, 256481, 203172, 254959, 118102, 64879, 15495, 271452, 66820, 33535, 149076, 154674, 222295, 35420, 346989, 89971, 382989, 3471, 65585, 196819, 160493, 160493, 421552, 181988, 76469, 296415, 193092, 60216, 39436, 289765, 409989, 382294, 24553, 33225, 50466, 240211, 241545, 246547, 97819, 283579, 224690, 1812, 78365, 108667, 23522, 430065, 95511, 405277, 198769, 271256, 3971, 151264, 38019, 1707, 302507, 18427, 13921, 288397, 5665, 206674, 351684, 53534, 60103, 337164, 221337, 402762, 395067, 340757, 291155, 118186, 196573, 295425, 16625, 35264, 226131, 147061, 23043, 121642, 12831, 54844, 252420, 95781, 25214, 258308, 77381, 2446, 24647, 7089, 48436, 1035, 103758, 298177, 23522, 412427, 414955, 1567, 1567, 90979, 435758, 53748, 34391, 382055, 40880, 403323, 60921, 404814, 172427};
        path = find_path_to_point_of_interest(400404, "HSBC", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(400404, valid_end_intersections, path));
        CHECK(path_cost <= 314.18405134081478991);
        
        valid_end_intersections = {33210, 34022, 128141, 272809, 34081, 395601, 337061, 425721, 92412, 35274, 18269, 407650, 49551, 1301, 33536, 153427, 435814, 125493, 211453, 418119, 1311};
        path = find_path_to_point_of_interest(408138, "EAT", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(408138, valid_end_intersections, path));
        CHECK(path_cost <= 4666.94963987085247936);
        
        valid_end_intersections = {219606};
        path = find_path_to_point_of_interest(423330, "Shams Fish Bar", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(423330, valid_end_intersections, path));
        CHECK(path_cost <= 1799.93372654002996569);
        
        valid_end_intersections = {124909, 124908};
        path = find_path_to_point_of_interest(430321, "Walworth Clinic", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(430321, valid_end_intersections, path));
        CHECK(path_cost <= 3581.91635092007390995);
        
        valid_end_intersections = {105898, 247139, 188034, 179491, 23523, 123076, 404762, 384293, 128141, 301694, 77212, 92632, 35420, 202486, 326808, 416395, 49719, 245390, 34580, 274267, 33724, 333891, 4614, 258026, 746, 258778, 3085, 14922, 22237, 419728, 119657, 96340, 286609, 266982, 177621, 417866, 102492, 107767, 96105, 304623, 290266, 291345, 293531, 88010, 76211, 265459, 412427, 421145, 140365, 65633, 76443, 420184, 183340, 75441, 294074, 54406, 181988, 1178, 410539, 396118, 193092, 410608, 393266, 340259, 13965, 243538, 427460, 122381, 114324, 283770, 125099, 411117, 114975, 320916, 136129, 369847, 368013, 211335, 331188, 38839, 21807, 55281, 102687, 13080, 335113, 203380, 230677, 247974, 393394, 33986, 287218, 235813, 257151, 198924, 110774, 123797, 312200, 155333, 363031, 52120, 143801, 213543, 60675, 118335, 215580, 107161, 226039, 406694, 395908, 166357, 145577, 364707, 413014, 150176, 416733, 263006, 321880, 29184, 364522, 426289, 158456, 314841, 414316, 394828, 33811, 430205, 236512, 337535, 374647, 124389, 408116, 114373, 131810};
        path = find_path_to_point_of_interest(198759, "McDonald's", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(198759, valid_end_intersections, path));
        CHECK(path_cost <= 1082.10904151011618524);
        
        valid_end_intersections = {76473};
        path = find_path_to_point_of_interest(434129, "Kalamaras", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(434129, valid_end_intersections, path));
        CHECK(path_cost <= 1516.20759986420921450);
        
        valid_end_intersections = {300533, 256914, 89269, 119547, 424715, 337403, 175177, 62182, 296630, 23075, 317753, 84515, 173273, 312900, 38881, 22549, 16289, 45660, 81400, 155519, 279929, 90492, 394658, 376010, 394288, 45325, 279366, 209541, 199279, 214839, 291827, 281409, 117410, 67050, 215258, 97514, 33506, 268594, 323346, 406560, 162977, 313504, 1490, 77838, 311516, 387108, 74164, 333010, 397220, 312036, 21518, 416365, 283126};
        path = find_path_to_point_of_interest(169984, "BP", 15.00000000000000000);
        path_cost = compute_path_travel_time(path, 15.00000000000000000);
        CHECK(path_is_legal(169984, valid_end_intersections, path));
        CHECK(path_cost <= 959.80703486939478353);
        
    } //find_path_to_point_of_interest_functionality

} //inter_poi_path_func_public

